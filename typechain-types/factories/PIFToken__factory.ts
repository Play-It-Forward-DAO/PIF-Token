/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PIFToken, PIFTokenInterface } from "../PIFToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506c0c9f2c9cd04674edea400000006040518060400160405280600981526020017f50494620546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f50494600000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000a4929190620003b9565b508060049080519060200190620000bd929190620003b9565b5050506000811162000106576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000fd90620004c8565b60405180910390fd5b8060808181525050506200012f620001236200016860201b60201c565b6200017060201b60201c565b62000162620001436200016860201b60201c565b6c0c9f2c9cd04674edea400000006200023660201b62000c0c1760201c565b62000687565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620002a9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002a090620004ea565b60405180910390fd5b620002bd60008383620003af60201b60201c565b8060026000828254620002d191906200053a565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200032891906200053a565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200038f91906200050c565b60405180910390a3620003ab60008383620003b460201b60201c565b5050565b505050565b505050565b828054620003c790620005a1565b90600052602060002090601f016020900481019282620003eb576000855562000437565b82601f106200040657805160ff191683800117855562000437565b8280016001018555821562000437579182015b828111156200043657825182559160200191906001019062000419565b5b5090506200044691906200044a565b5090565b5b80821115620004655760008160009055506001016200044b565b5090565b60006200047860158362000529565b9150620004858262000635565b602082019050919050565b60006200049f601f8362000529565b9150620004ac826200065e565b602082019050919050565b620004c28162000597565b82525050565b60006020820190508181036000830152620004e38162000469565b9050919050565b60006020820190508181036000830152620005058162000490565b9050919050565b6000602082019050620005236000830184620004b7565b92915050565b600082825260208201905092915050565b6000620005478262000597565b9150620005548362000597565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200058c576200058b620005d7565b5b828201905092915050565b6000819050919050565b60006002820490506001821680620005ba57607f821691505b60208210811415620005d157620005d062000606565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f45524332304361707065643a2063617020697320300000000000000000000000600082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6080516120e2620006a3600039600061057f01526120e26000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063a0712d6811610071578063a0712d68146102f8578063a457c2d714610314578063a9059cbb14610344578063dd62ed3e14610374578063f2fde38b146103a457610121565b806370a0823114610266578063715018a61461029657806379cc6790146102a05780638da5cb5b146102bc57806395d89b41146102da57610121565b8063313ce567116100f4578063313ce567146101c2578063355274ea146101e057806339509351146101fe57806340c10f191461022e57806342966c681461024a57610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461017457806323b872dd14610192575b600080fd5b61012e6103c0565b60405161013b91906118b7565b60405180910390f35b61015e600480360381019061015991906115bd565b610452565b60405161016b919061189c565b60405180910390f35b61017c610470565b6040516101899190611a99565b60405180910390f35b6101ac60048036038101906101a7919061156e565b61047a565b6040516101b9919061189c565b60405180910390f35b6101ca610572565b6040516101d79190611ab4565b60405180910390f35b6101e861057b565b6040516101f59190611a99565b60405180910390f35b610218600480360381019061021391906115bd565b6105a3565b604051610225919061189c565b60405180910390f35b610248600480360381019061024391906115bd565b61064f565b005b610264600480360381019061025f91906115f9565b6106d9565b005b610280600480360381019061027b9190611509565b6106ed565b60405161028d9190611a99565b60405180910390f35b61029e610735565b005b6102ba60048036038101906102b591906115bd565b6107bd565b005b6102c4610838565b6040516102d19190611881565b60405180910390f35b6102e2610862565b6040516102ef91906118b7565b60405180910390f35b610312600480360381019061030d91906115f9565b6108f4565b005b61032e600480360381019061032991906115bd565b610984565b60405161033b919061189c565b60405180910390f35b61035e600480360381019061035991906115bd565b610a6f565b60405161036b919061189c565b60405180910390f35b61038e60048036038101906103899190611532565b610a8d565b60405161039b9190611a99565b60405180910390f35b6103be60048036038101906103b99190611509565b610b14565b005b6060600380546103cf90611bfd565b80601f01602080910402602001604051908101604052809291908181526020018280546103fb90611bfd565b80156104485780601f1061041d57610100808354040283529160200191610448565b820191906000526020600020905b81548152906001019060200180831161042b57829003601f168201915b5050505050905090565b600061046661045f610d6c565b8484610d74565b6001905092915050565b6000600254905090565b6000610487848484610f3f565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006104d2610d6c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610552576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054990611979565b60405180910390fd5b6105668561055e610d6c565b858403610d74565b60019150509392505050565b60006012905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006106456105b0610d6c565b8484600160006105be610d6c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106409190611aeb565b610d74565b6001905092915050565b610657610d6c565b73ffffffffffffffffffffffffffffffffffffffff16610675610838565b73ffffffffffffffffffffffffffffffffffffffff16146106cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c290611999565b60405180910390fd5b6106d582826111c0565b5050565b6106ea6106e4610d6c565b826111ce565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61073d610d6c565b73ffffffffffffffffffffffffffffffffffffffff1661075b610838565b73ffffffffffffffffffffffffffffffffffffffff16146107b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a890611999565b60405180910390fd5b6107bb60006113a5565b565b60006107d0836107cb610d6c565b610a8d565b905081811015610815576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080c906119b9565b60405180910390fd5b61082983610821610d6c565b848403610d74565b61083383836111ce565b505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461087190611bfd565b80601f016020809104026020016040519081016040528092919081815260200182805461089d90611bfd565b80156108ea5780601f106108bf576101008083540402835291602001916108ea565b820191906000526020600020905b8154815290600101906020018083116108cd57829003601f168201915b5050505050905090565b6108fc610d6c565b73ffffffffffffffffffffffffffffffffffffffff1661091a610838565b73ffffffffffffffffffffffffffffffffffffffff1614610970576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096790611999565b60405180910390fd5b61098161097b610d6c565b826111c0565b50565b60008060016000610993610d6c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610a50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4790611a59565b60405180910390fd5b610a64610a5b610d6c565b85858403610d74565b600191505092915050565b6000610a83610a7c610d6c565b8484610f3f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610b1c610d6c565b73ffffffffffffffffffffffffffffffffffffffff16610b3a610838565b73ffffffffffffffffffffffffffffffffffffffff1614610b90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8790611999565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf790611919565b60405180910390fd5b610c09816113a5565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7390611a79565b60405180910390fd5b610c886000838361146b565b8060026000828254610c9a9190611aeb565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cef9190611aeb565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d549190611a99565b60405180910390a3610d6860008383611470565b5050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610de4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddb90611a39565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4b90611939565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610f329190611a99565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610faf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa6906119f9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561101f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611016906118d9565b60405180910390fd5b61102a83838361146b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156110b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a790611959565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111439190611aeb565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111a79190611a99565b60405180910390a36111ba848484611470565b50505050565b6111ca8282611475565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561123e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611235906119d9565b60405180910390fd5b61124a8260008361146b565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156112d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c7906118f9565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282546113279190611b41565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161138c9190611a99565b60405180910390a36113a083600084611470565b505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b61147d61057b565b81611486610470565b6114909190611aeb565b11156114d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c890611a19565b60405180910390fd5b6114db8282610c0c565b5050565b6000813590506114ee8161207e565b92915050565b60008135905061150381612095565b92915050565b60006020828403121561151b57600080fd5b6000611529848285016114df565b91505092915050565b6000806040838503121561154557600080fd5b6000611553858286016114df565b9250506020611564858286016114df565b9150509250929050565b60008060006060848603121561158357600080fd5b6000611591868287016114df565b93505060206115a2868287016114df565b92505060406115b3868287016114f4565b9150509250925092565b600080604083850312156115d057600080fd5b60006115de858286016114df565b92505060206115ef858286016114f4565b9150509250929050565b60006020828403121561160b57600080fd5b6000611619848285016114f4565b91505092915050565b61162b81611b75565b82525050565b61163a81611b87565b82525050565b600061164b82611acf565b6116558185611ada565b9350611665818560208601611bca565b61166e81611c8d565b840191505092915050565b6000611686602383611ada565b915061169182611c9e565b604082019050919050565b60006116a9602283611ada565b91506116b482611ced565b604082019050919050565b60006116cc602683611ada565b91506116d782611d3c565b604082019050919050565b60006116ef602283611ada565b91506116fa82611d8b565b604082019050919050565b6000611712602683611ada565b915061171d82611dda565b604082019050919050565b6000611735602883611ada565b915061174082611e29565b604082019050919050565b6000611758602083611ada565b915061176382611e78565b602082019050919050565b600061177b602483611ada565b915061178682611ea1565b604082019050919050565b600061179e602183611ada565b91506117a982611ef0565b604082019050919050565b60006117c1602583611ada565b91506117cc82611f3f565b604082019050919050565b60006117e4601983611ada565b91506117ef82611f8e565b602082019050919050565b6000611807602483611ada565b915061181282611fb7565b604082019050919050565b600061182a602583611ada565b915061183582612006565b604082019050919050565b600061184d601f83611ada565b915061185882612055565b602082019050919050565b61186c81611bb3565b82525050565b61187b81611bbd565b82525050565b60006020820190506118966000830184611622565b92915050565b60006020820190506118b16000830184611631565b92915050565b600060208201905081810360008301526118d18184611640565b905092915050565b600060208201905081810360008301526118f281611679565b9050919050565b600060208201905081810360008301526119128161169c565b9050919050565b60006020820190508181036000830152611932816116bf565b9050919050565b60006020820190508181036000830152611952816116e2565b9050919050565b6000602082019050818103600083015261197281611705565b9050919050565b6000602082019050818103600083015261199281611728565b9050919050565b600060208201905081810360008301526119b28161174b565b9050919050565b600060208201905081810360008301526119d28161176e565b9050919050565b600060208201905081810360008301526119f281611791565b9050919050565b60006020820190508181036000830152611a12816117b4565b9050919050565b60006020820190508181036000830152611a32816117d7565b9050919050565b60006020820190508181036000830152611a52816117fa565b9050919050565b60006020820190508181036000830152611a728161181d565b9050919050565b60006020820190508181036000830152611a9281611840565b9050919050565b6000602082019050611aae6000830184611863565b92915050565b6000602082019050611ac96000830184611872565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611af682611bb3565b9150611b0183611bb3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611b3657611b35611c2f565b5b828201905092915050565b6000611b4c82611bb3565b9150611b5783611bb3565b925082821015611b6a57611b69611c2f565b5b828203905092915050565b6000611b8082611b93565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611be8578082015181840152602081019050611bcd565b83811115611bf7576000848401525b50505050565b60006002820490506001821680611c1557607f821691505b60208210811415611c2957611c28611c5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760008201527f616e636500000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332304361707065643a2063617020657863656564656400000000000000600082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b61208781611b75565b811461209257600080fd5b50565b61209e81611bb3565b81146120a957600080fd5b5056fea26469706673582212207f8cca0a375a6e2997e0c49e58a607ffd7329167c92584eb9f3a2eeaf10c417664736f6c63430008040033";

type PIFTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PIFTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PIFToken__factory extends ContractFactory {
  constructor(...args: PIFTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PIFToken> {
    return super.deploy(overrides || {}) as Promise<PIFToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PIFToken {
    return super.attach(address) as PIFToken;
  }
  connect(signer: Signer): PIFToken__factory {
    return super.connect(signer) as PIFToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PIFTokenInterface {
    return new utils.Interface(_abi) as PIFTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PIFToken {
    return new Contract(address, _abi, signerOrProvider) as PIFToken;
  }
}
